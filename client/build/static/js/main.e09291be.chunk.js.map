{"version":3,"sources":["aset/avanza.png","aset/xenia.png","aset/innova.png","aset/innova-reborn.png","aset/elf-short.jpg","aset/elf-long.jpg","aset/ho-ace.jpg","components/main.js","components/mobil.js","components/book.js","components/thankYou.js","components/navbar.js","components/cont.js","admin/list.js","admin/view.js","admin/container.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","props","Row","noGutters","className","Col","Button","color","onClick","_","setPage","empty","selectMobil","name","id","console","log","src","avanza","xenia","innova","innovaR","elfShort","elfLong","hiAce","alt","chairs","harga","tipe","useState","totalMobils","setTotalMobils","mobil","date","Date","time","size","selection","setSelection","phone","email","booking","setBooking","tipes","times","reservationError","setReservationError","getDate","getMonth","getFullYear","slice","getEmptyMobils","filter","isAvailable","length","useEffect","a","datetime","fetch","method","headers","body","JSON","stringify","res","json","mobils","capacity","reserve","text","mobil_name","mobil_id","xs","sm","Input","type","bsSize","placeholder","value","onChange","e","target","required","toISOString","split","isNaN","newSel","UncontrolledDropdown","DropdownToggle","caret","DropdownMenu","right","newTimes","forEach","push","DropdownItem","key","getTimes","newLocations","loc","getLocations","toString","newSizes","i","getSizes","_id","getMobils","Navbar","light","expand","NavbarBrand","Cont","page","hp","Table","dark","reservation","Container","Component","App","path","component","Admin","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e09291be.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avanza.805d3904.png\";","module.exports = __webpack_public_path__ + \"static/media/xenia.2013f01a.png\";","module.exports = __webpack_public_path__ + \"static/media/innova.a9145a0e.png\";","module.exports = __webpack_public_path__ + \"static/media/innova-reborn.98fd7a70.png\";","module.exports = __webpack_public_path__ + \"static/media/elf-short.b78f4338.jpg\";","module.exports = __webpack_public_path__ + \"static/media/elf-long.c4f4b445.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ho-ace.9b3d0cee.jpg\";","import React from \"react\";\nimport { Row, Col, Button } from \"reactstrap\";\n\nexport default props => {\n  return (\n    <div>\n      <Row noGutters className=\"text-center align-items-center mb-cta\">\n        <Col>\n          <p className=\"looking-for-mb\">\n            Sewa Mobil Nahwa\n            <i className=\"fas fa-mb-slice mb-slice\"></i>\n          </p>\n          <Button\n            color=\"none\"\n            className=\"book-mobil-btn\"\n            onClick={_ => {\n              props.setPage(1);\n            }}\n          >\n            Sewa Mobil\n          </Button>\n        </Col>\n      </Row>\n      <Row noGutters className=\"text-center big-img-container\">\n        <Col>\n          \n        </Col>\n      </Row>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {  Col } from \"reactstrap\";\nimport avanza from '../aset/avanza.png';\nimport xenia from '../aset/xenia.png';\nimport innova from '../aset/innova.png';\nimport innovaR from '../aset/innova-reborn.png';\nimport elfShort from '../aset/elf-short.jpg';\nimport elfLong from '../aset/elf-long.jpg';\nimport hiAce from '../aset/ho-ace.jpg';\n\n\n\nexport default props => {\n  \n  \n const getImage = _ => {\n    if(props.name === 'Avanza') {\n        return avanza;\n    }else if(props.name === 'Xenia') {\n        return xenia;\n    }else if(props.name === 'Grand New Innova'){\n        return innova;\n    }else if(props.name === 'Grand New Innova Reborn') {\n        return innovaR;\n    }\n    else if(props.name === 'Elf Short') {\n        return elfShort;\n    }\n    else if(props.name === 'Elf Long') {\n        return elfLong;\n    }\n    else if(props.name === 'Hi Ace'){\n        return hiAce;\n    }\n   \n}\n  return (\n    <div className=\"mobil-container\">\n      <Col\n        className={props.empty ? \"mobil selecmobil-mobil\" : \"mobil\"}\n        onClick={_ => {\n          props.empty\n            ? props.selectMobil(props.name, props.id)\n            : console.log(\"Tried to select a full mobil\");\n            \n        }}\n      >\n        <div className=\"img-cont\">\n        <img className=\"image\" src={getImage(props.name)} alt=\"car\"/>\n        </div>\n        <h2 className=\"text-center mobil-name\">{props.name}</h2>\n        \n        <p className=\"text-center\">Kapasitas penumpang: {props.chairs}</p>\n        <p className=\"text-center\">Harga : Rp. {props.harga}</p>\n        <p className=\"text-center\">Tipe : {props.tipe}</p>\n        <p className=\"text-center\">{props.empty ? \"Tersedia\" : \"Tidak Tersedia\"}</p>\n       \n      </Col>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Row,\n  Col,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Input,\n  Button\n} from \"reactstrap\";\n\nimport Mobil from \"./mobil\";\n\n\nexport default props => {\n  const [totalMobils, setTotalMobils] = useState([]);\n\n  // User's selections\n  const [selection, setSelection] = useState({\n    mobil: {\n      name: null,\n      id: null\n    },\n    date: new Date(),\n    time: null,\n    tipe: \"Semua Tipe\",\n    size: 0\n  });\n\n  // User's booking details\n  const [booking, setBooking] = useState({\n    name: \"\",\n    phone: \"\",\n    email: \"\"\n  });\n\n  // List of potential tipes\n  const [tipes] = useState([\"Semua Tipe\", \"MPV\", \"Minibus\"]);\n  const [times] = useState([\n    \"12JAM\",\n    \"24JAM\",\n    \n  ]);\n  // Basic reservation \"validation\"\n  const [reservationError, setReservationError] = useState(false);\n\n  const getDate = _ => {\n    const months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ];\n    const date =\n      months[selection.date.getMonth()] +\n      \" \" +\n      selection.date.getDate() +\n      \" \" +\n      selection.date.getFullYear();\n    let time = selection.time.slice(0, -3);\n    time = selection.time > 12 ? time + 12 + \":00\" : time + \":00\";\n    console.log(time);\n    const datetime = new Date(date + \" \" + time);\n    return datetime;\n  };\n\n  const getEmptyMobils = _ => {\n    let mobils = totalMobils.filter(mobil => mobil.isAvailable);\n    return mobils.length;\n  };\n\n  useEffect(() => {\n    // Check availability of mobils from DB when a date and time is selected\n    if (selection.time && selection.date) {\n      (async _ => {\n        let datetime = getDate();\n        let res = await fetch(\"/availability\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            date: datetime\n          })\n        });\n        res = await res.json();\n        // Filter available mobils with tipe and group size criteria\n        let mobils = res.mobils.filter(\n          mobil =>\n            (selection.size > 0 ? mobil.capacity >= selection.size : true) &&\n            (selection.tipe !== \"Semua Tipe\"\n              ? mobil.tipe === selection.tipe\n              : true)\n        );\n        setTotalMobils(mobils);\n      })();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selection.time, selection.date, selection.size, selection.tipe]);\n\n  // Make the reservation if all details are filled out\n  const reserve = async _ => {\n    if (\n      (booking.name.length === 0) |\n      (booking.phone.length === 0) |\n      (booking.email.length === 0)\n    ) {\n      console.log(\"Incomplete Details\");\n      setReservationError(true);\n    } else {\n      const datetime = getDate();\n      let res = await fetch(\"/reserve\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ...booking,\n          date: datetime,\n          mobil: selection.mobil.id\n        })\n      });\n      res = await res.text();\n      console.log(\"Reserved: \" + res);\n      props.setPage(2);\n    }\n  };\n\n  // Clicking on a mobil sets the selection state\n  const selectMobil = (mobil_name, mobil_id) => {\n    setSelection({\n      ...selection,\n      mobil: {\n        name: mobil_name,\n        id: mobil_id\n      }\n    });\n  };\n\n  // Generate party size dropdown\n  const getSizes = _ => {\n    let newSizes = [];\n\n    for (let i = 1; i < 20; i++) {\n      newSizes.push(\n        <DropdownItem\n          key={i}\n          className=\"booking-dropdown-item\"\n          onClick={e => {\n            let newSel = {\n              ...selection,\n              mobil: {\n                ...selection.mobil\n              },\n              size: i\n            };\n            setSelection(newSel);\n          }}\n        >\n          {i}\n        </DropdownItem>\n      );\n    }\n    return newSizes;\n  };\n\n  // tipe mobil dropdown\n  const getLocations = _ => {\n    let newLocations = [];\n    tipes.forEach(loc => {\n      newLocations.push(\n        <DropdownItem\n          key={loc}\n          className=\"booking-dropdown-item\"\n          onClick={_ => {\n            let newSel = {\n              ...selection,\n              mobil: {\n                ...selection.mobil\n              },\n              tipe: loc\n            };\n            setSelection(newSel);\n          }}\n        >\n          {loc}\n        </DropdownItem>\n      );\n    });\n    return newLocations;\n  };\n\n  // lama sewa dropdown\n  const getTimes = _ => {\n    let newTimes = [];\n    times.forEach(time => {\n      newTimes.push(\n        <DropdownItem\n          key={time}\n          className=\"booking-dropdown-item\"\n          onClick={_ => {\n            let newSel = {\n              ...selection,\n              mobil: {\n                ...selection.mobil\n              },\n              time: time\n            };\n            setSelection(newSel);\n          }}\n        >\n          {time}\n        </DropdownItem>\n      );\n    });\n    return newTimes;\n  };\n\n  // Generating mobils from available mobils state\n  const getMobils = _ => {\n    console.log(\"Getting mobils\");\n    if (getEmptyMobils() > 0) {\n      let mobils = [];\n      totalMobils.forEach(mobil => {\n        if (mobil.isAvailable) {\n          mobils.push(\n            <Mobil\n              key={mobil._id}\n              id={mobil._id}\n              chairs={mobil.capacity}\n              name={mobil.name}\n              tipe={mobil.tipe}\n              harga={mobil.harga}\n              empty\n              selectMobil={selectMobil}\n            />\n          );\n        } else {\n          mobils.push(\n            <Mobil\n              key={mobil._id}\n              id={mobil._id}\n              chairs={mobil.capacity}\n              name={mobil.name}\n              tipe={mobil.tipe}\n              harga={mobil.harga}\n              selectMobil={selectMobil}\n            />\n          );\n        }\n      });\n      return mobils;\n    }\n  };\n\n  return (\n    <div>\n      <Row noGutters className=\"text-center align-items-center mb-cta\">\n        <Col>\n          <p className=\"looking-for-mb\">\n            {!selection.mobil.id ? \"Pilih Mobil\" : \"Konfirmasi Pemesanan\"}\n            <i\n              className={\n                !selection.mobil.id\n                  ? \"fas fa-chair \"\n                  : \"fas fa-clipboard-check \"\n              }\n            ></i>\n          </p>\n          <p className=\"selected-mobil\">\n            {selection.mobil.id\n              ? \"Anda Menyewa Mobil \" + selection.mobil.name \n              : null}\n          </p>\n\n          {reservationError ? (\n            <p className=\"reservation-error\">\n              * Lengkapi data diri.\n            </p>\n          ) : null}\n        </Col>\n      </Row>\n\n      {!selection.mobil.id ? (\n        <div id=\"reservation-stuff\">\n          <Row noGutters className=\"text-center align-items-center\">\n            <Col xs=\"12\" sm=\"3\">\n              <input\n                type=\"date\"\n                required=\"required\"\n                className=\"booking-dropdown\"\n                value={selection.date.toISOString().split(\"T\")[0]}\n                onChange={e => {\n                  if (!isNaN(new Date(new Date(e.target.value)))) {\n                    let newSel = {\n                      ...selection,\n                      mobil: {\n                        ...selection.mobil\n                      },\n                      date: new Date(e.target.value)\n                    };\n                    setSelection(newSel);\n                  } else {\n                    console.log(\"Invalid date\");\n                    let newSel = {\n                      ...selection,\n                      mobil: {\n                        ...selection.mobil\n                      },\n                      date: new Date()\n                    };\n                    setSelection(newSel);\n                  }\n                }}\n              ></input>\n            </Col>\n            <Col xs=\"12\" sm=\"3\">\n              <UncontrolledDropdown>\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">\n                  {selection.time === null ? \"Pilih Lama Sewa\" : selection.time}\n                </DropdownToggle>\n                <DropdownMenu right className=\"booking-dropdown-menu\">\n                  {getTimes()} \n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Col>\n            <Col xs=\"12\" sm=\"3\">\n              <UncontrolledDropdown>\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">\n                  {selection.tipe}\n                </DropdownToggle>\n                <DropdownMenu right className=\"booking-dropdown-menu\">\n                  {getLocations()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Col>\n            <Col xs=\"12\" sm=\"3\">\n              <UncontrolledDropdown>\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">\n                  {selection.size === 0\n                    ? \"Jumlah Penumpang\"\n                    : selection.size.toString()}\n                </DropdownToggle>\n                <DropdownMenu right className=\"booking-dropdown-menu\">\n                  {getSizes()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Col>\n          </Row>\n          <Row noGutters className=\"mobils-display\">\n            <Col>\n              {getEmptyMobils() > 0 ? (\n                <h2 className=\"available-mobils text-center\">{getEmptyMobils()} Mobil Tersedia</h2>\n              ) : null}\n\n              {selection.date && selection.time ? (\n                getEmptyMobils() > 0 ? (\n                  <div>\n                    \n                    <Row noGutters>{getMobils()}</Row>\n                  </div>\n                ) : (\n                  <p className=\"mobil-display-message\">Mobil sedang tidak tersedia</p>\n                )\n              ) : (\n                <p className=\"mobil-display-message\">\n                  Silahkan pilih tanggal dan lama sewa.\n                </p>\n              )}\n            </Col>\n          </Row>\n        </div>\n      ) : (\n        <div id=\"confirm-reservation-stuff\">\n          <Row\n            noGutters\n            className=\"text-center justify-content-center reservation-details-container\"\n          >\n            <Col xs=\"12\" sm=\"3\" className=\"reservation-details\">\n              <Input\n                type=\"text\"\n                bsSize=\"lg\"\n                placeholder=\"Name\"\n                className=\"reservation-input\"\n                value={booking.name}\n                onChange={e => {\n                  setBooking({\n                    ...booking,\n                    name: e.target.value\n                  });\n                }}\n              />\n            </Col>\n            <Col xs=\"12\" sm=\"3\" className=\"reservation-details\">\n              <Input\n                type=\"text\"\n                bsSize=\"lg\"\n                placeholder=\"Phone Number\"\n                className=\"reservation-input\"\n                value={booking.phone}\n                onChange={e => {\n                  setBooking({\n                    ...booking,\n                    phone: e.target.value\n                  });\n                }}\n              />\n            </Col>\n            <Col xs=\"12\" sm=\"3\" className=\"reservation-details\">\n              <Input\n                type=\"text\"\n                bsSize=\"lg\"\n                placeholder=\"Email\"\n                className=\"reservation-input\"\n                value={booking.email}\n                onChange={e => {\n                  setBooking({\n                    ...booking,\n                    email: e.target.value\n                  });\n                }}\n              />\n            </Col>\n          </Row>\n          <Row noGutters className=\"text-center\">\n            <Col>\n              <Button\n                color=\"none\"\n                className=\"book-mobil-btn\"\n                onClick={_ => {\n                  reserve();\n                }}\n              >\n                Pesan Sekarang\n              </Button>\n            </Col>\n          </Row>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Row, Col } from \"reactstrap\";\n\nexport default _ => {\n  return (\n    <div>\n      <Row noGutters className=\"text-center\">\n        <Col>\n          <p className=\"thanks-header\">Terima Kasih!</p>\n          <i className=\"fas fa-pizza-slice thank-you-pizza\"></i>\n          <p className=\"thanks-subtext\">\n            Anda Akan Menerima pesan konfirmasi pemesanan Melalui Whatsapp\n          </p>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Navbar, NavbarBrand } from \"reactstrap\";\n\nexport default props => {\n  return (\n    <div>\n      <Navbar color=\"light\" light expand=\"md\">\n        <NavbarBrand\n          className=\"nav-brand\"\n          onClick={_ => {\n            props.setPage(0);\n          }}\n        >\n          Nahwa Travel\n        </NavbarBrand>\n      </Navbar>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport '../style/index.css';\nimport Main from \"./main\";\nimport Book from \"./book\";\nimport ThankYou from \"./thankYou\";\nimport Navbar from \"./navbar\";\n\n\nexport default Cont => {\n    const [page, setPage] = useState(0);\n  \n    return (\n      <div>\n        <Navbar setPage={setPage} />\n        {page === 0 ? <Main setPage={setPage} /> : null}\n        {page === 1 ? <Book setPage={setPage} /> : null}\n        {page === 2 ? <ThankYou /> : null}\n      </div>\n    );\n  };","import React from \"react\";\nimport {Button} from \"reactstrap\";\n\nexport default props => {\n  return (\n    <tr>\n        <td>{props.name}</td>\n        <td>{props.res}</td>\n        <td>{props.hp}</td>\n        <td>{props.email}</td>\n        <td><Button  onClick={_ => {\n          props.empty\n            ? props.selectMobil(props.name, props.id)\n            : console.log(\"Tried to select a full mobil\");\n            \n        }}>Hapus</Button></td>\n    </tr>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Row,\n  Col,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Table\n} from \"reactstrap\";\n\nimport List from \"./list\";\n\n\nexport default props => {\n  const [totalMobils, setTotalMobils] = useState([]);\n \n  // User's selections\n  const [selection, setSelection] = useState({\n    mobil: {\n      name: null,\n      id: null\n    },\n    date: new Date(),\n    time: null,\n    tipe: \"Semua Tipe\",\n  \n  });\n\n\n\n  // List of potential tipes\n  \n  const [times] = useState([\n    \"12JAM\",\n    \"24JAM\",\n    \n  ]);\n  // Basic reservation \"validation\"\n  \n  const getDate = _ => {\n    const months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ];\n    const date =\n      months[selection.date.getMonth()] +\n      \" \" +\n      selection.date.getDate() +\n      \" \" +\n      selection.date.getFullYear();\n    let time = selection.time.slice(0, -3);\n    time = selection.time > 12 ? time + 12 + \":00\" : time + \":00\";\n    console.log(time);\n    const datetime = new Date(date + \" \" + time);\n    return datetime;\n  };\n\n  const getEmptyMobils = _ => {\n    let mobils = totalMobils.filter(mobil => mobil.isAvailable);\n    return mobils.length;\n  };\n \n  useEffect(() => {\n    // Check availability of mobils from DB when a date and time is selected\n    if (selection.time && selection.date) {\n      (async _ => {\n        let datetime = getDate();\n        let res = await fetch(\"http://localhost:3005/availability\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            date: datetime\n          })\n        });\n        res = await res.json();\n        // Filter available mobils with tipe and group size criteria\n        let mobils = res.mobils.filter(\n          mobil =>\n            (selection.size > 0 ? mobil.capacity >= selection.size : true) &&\n            (selection.tipe !== \"Semua Tipe\"\n              ? mobil.tipe === selection.tipe\n              : true)\n        );\n        setTotalMobils(mobils);\n      })();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selection.time, selection.date, selection.size, selection.tipe]);\n\n  // Make the reservation if all details are filled out\n const reserve = async _ => {\n  const datetime = getDate();\n  let res = await fetch(\"http://localhost:3005/all\", {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \n      date: datetime,\n      mobil: selection.mobil.reservation.id\n    })\n  });\n  res = await res.text();\n  console.log(\"Reserved: \" + res);\n  \n  }; \n\n  // Clicking on a mobil sets the selection state\n  const selectMobil = (mobil_name, mobil_id) => {\n    setSelection({\n      ...selection,\n      mobil: {\n        name: mobil_name,\n        id: mobil_id\n      }\n    });\n  };\n\n  // lama sewa dropdown\n  const getTimes = _ => {\n    let newTimes = [];\n    times.forEach(time => {\n      newTimes.push(\n        <DropdownItem\n          key={time}\n          className=\"booking-dropdown-item\"\n          onClick={_ => {\n            let newSel = {\n              ...selection,\n              mobil: {\n                ...selection.mobil\n              },\n              time: time\n            };\n            setSelection(newSel);\n          }}\n        >\n          {time}\n        </DropdownItem>\n      );\n    });\n    return newTimes;\n  };\n\n  // Generating mobils from available mobils state\n  const getMobils = _ => {\n    console.log(\"Getting mobils\");\n    if (getEmptyMobils() > 0) {\n      let mobils = [];\n      totalMobils.forEach(mobil => {\n        if (mobil.isAvailable === false) {\n          mobils.push(\n            <List\n              key={mobil._id}\n              id={mobil._id}\n              name={mobil.name}\n              empty\n              res={mobil.reservation.name}\n              hp={mobil.reservation.phone}\n              email={mobil.reservation.email}\n              selectMobil={selectMobil}\n            />\n          );\n        } else {\n          mobils.push(\n            <List\n              key={mobil._id}\n              id={mobil._id}\n              chairs={mobil.capacity}\n              name={mobil.name}\n              tipe={mobil.tipe}\n              harga={mobil.harga}\n              selectMobil={selectMobil}\n            />\n          );\n        }\n      });\n      return mobils;\n    }\n  };\n\n  return (\n    <div>\n      {!selection.mobil.id ? (\n        <div id=\"reservation-stuff\">\n          <Row noGutters className=\"text-center align-items-center\">\n            <Col xs=\"12\" sm=\"3\">\n              <input\n                type=\"date\"\n                required=\"required\"\n                className=\"booking-dropdown\"\n                value={selection.date.toISOString().split(\"T\")[0]}\n                onChange={e => {\n                  if (!isNaN(new Date(new Date(e.target.value)))) {\n                    let newSel = {\n                      ...selection,\n                      mobil: {\n                        ...selection.mobil\n                      },\n                      date: new Date(e.target.value)\n                    };\n                    setSelection(newSel);\n                  } else {\n                    console.log(\"Invalid date\");\n                    let newSel = {\n                      ...selection,\n                      mobil: {\n                        ...selection.mobil\n                      },\n                      date: new Date()\n                    };\n                    setSelection(newSel);\n                  }\n                }}\n              ></input>\n            </Col>\n            <Col xs=\"12\" sm=\"3\">\n              <UncontrolledDropdown>\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">\n                  {selection.time === null ? \"Pilih Lama Sewa\" : selection.time}\n                </DropdownToggle>\n                <DropdownMenu right className=\"booking-dropdown-menu\">\n                  {getTimes()} \n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Col>\n        </Row>\n        <div className=\"table-cont\">\n         <Table dark>\n          <thead>\n            <tr>\n              <th>Mobil</th>\n              <th>Nama Pemesan</th>\n              <th>Nomor Hp</th>\n              <th>Email</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n              {selection.date && selection.time ? (\n                getEmptyMobils() > 0 ? (\n                  \n                  getMobils()\n                  \n                ) : (\n                  <tbody>no data</tbody>\n                )\n              ) : (\n                <p className=\"mobil-display-message\">\n                  Silahkan pilih tanggal dan lama sewa.\n                </p>\n              )}\n        \n          </tbody>\n          </Table> \n        </div>     \n      </div>\n      ) : (\n        <p></p> )}\n    </div>\n  );\n};\n","import React, {Component} from 'react';\nimport View from './view';\nimport {Navbar,NavbarBrand} from 'reactstrap';\n\nclass Container extends Component{\n  render(){\n    return(\n      <div>\n       <Navbar color=\"light\" light expand=\"md\">\n        <NavbarBrand\n          className=\"nav-brand\"\n       \n        >\n          Admin\n        </NavbarBrand>\n      </Navbar>\n        \n   \n      <View />\n    \n      </div>\n    );\n  }\n}\n\nexport default Container;","import React, {Component} from 'react';\nimport Cont from './components/cont';\nimport Admin from './admin/container';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\n\nclass App extends Component{\n  render(){\n    return(\n      <div>\n        <BrowserRouter>\n        <Switch>\n          <Route path=\"/admin\" component={Admin} />\n          <Route path=\"/\" component={Cont} />\n        </Switch>\n        </BrowserRouter>        \n      </div>\n      \n    )\n  }\n\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}